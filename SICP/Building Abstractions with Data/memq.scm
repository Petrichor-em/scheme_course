(define (memq item x)
	(cond 	((null? x) #f)
			((eq? (car x) item) x)
			(else (memq item (cdr x)))))

(display (memq 'apple '(pear banana prune)))
(newline)
(display (memq 'apple '(x (apple sauce) y apple pear)))
(newline)

(display (list `a `b `c))
(newline)
(display (list (list `orange)))
(newline)
(display `((x1 x2) (y1 y2)))
(newline)
(display (cdr `((x1 x2) (y1 y2))))
(newline)
(display (cadr `((x1 x2) (y1 y2))))
(newline)
(display (pair? (car `(a short list))))
(newline)
(display (memq `red `(red shoes blue socks)))
(newline)